@model FrontEnd.Models.ViewModels.RequisitoViewModel
@{ ViewBag.Title = "Editar Información del Requisito"; }

<div class="container bg-light text-dark border" style=" height: auto; min-height: 80vh; padding-bottom: 20px; margin-bottom: 28px; word-wrap: break-word;">
    <div style="text-align:center;">
        <h1 class="display-5">@ViewBag.Title</h1>
    </div>
    <hr />

    @using (Html.BeginForm("Editar", "Requisito", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.HiddenFor(d => d.IdRequisito)
        @Html.HiddenFor(d => d.IdPolicia)
        @Html.HiddenFor(d => d.RutaArchivo)
        <div class="row ">
            <div class="col mb-3">
                <h1 class="h2">@Html.DisplayTextFor(d => d.NombrePolicia)</h1>
            </div>
        </div>
        <div class="row mb-4">
            <div class="form-group col-md-2 position-relative">
                @Html.LabelFor(d => d.TipoRequisito)
                @Html.DropDownListFor(d => d.TipoRequisito, Model.TiposRequisito, "--Seleccione--", new { @class = "form-select", @id = "TipoRequisito" })
                @Html.ValidationMessageFor(d => d.TipoRequisito, null, new { @class = "red" })
            </div>
        </div>
        if (Model.FechaVencimiento != null)
        {
            <div class="row mb-4">
                <div class="form-group col-md-2 position-relative" , id="FechaVencimiento">
                    @Html.LabelFor(d => d.FechaVencimiento)
                    @Html.EditorFor(d => d.FechaVencimiento, "", new { @class = "form-control" })
                    @Html.ValidationMessageFor(d => d.FechaVencimiento, null, new { @class = "red" })
                </div>
            </div>
        }
        <div class="row mb-4">
            <div class="form-group col-md-12 position-relative">
                @Html.LabelFor(d => d.Detalles)
                @Html.TextAreaFor(d => d.Detalles, new { @class = "form-control", @maxlength = "250", @style = "text-transform:uppercase", @onkeyup = "this.value = this.value.toUpperCase();", @onkeypress = "return sololetrasnumeros(event)" })
                @Html.ValidationMessageFor(d => d.Detalles, null, new { @class = "red" })
            </div>
        </div>
        if (Model.Imagen != null)
        {
            <div class="row mb-4">
                <div class="form-group col-md-3 position-relative">
                    @Html.LabelFor(d => d.Archivo)
                    @Html.TextBoxFor(d => d.Archivo, new { @type = "file", accept = ".pdf" })
                    @Html.ValidationMessageFor(d => d.Archivo, "", new { @class = "red" })
                </div>
            </div>
        }

        <hr />
        <div class="form-row">
            <div class="form-group col-md-12">
                <div style="text-align:center;">
                    <a class="btn btn-secondary" onclick="history.go(-1)">Cancelar</a>
                    <a class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#show">Guardar</a>
                </div>
            </div>
        </div>

        <div class="modal fade" id="show" tabindex="-1" aria-labelledby="showLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="showLabel">Editar Requisito</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" />
                    </div>
                    <div class="modal-body">
                        <p>¿Está seguro que desea editar el requisito?</p>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-outline-danger" id="Cancel" data-bs-dismiss="modal">Cancelar</button>
                        <button type="submit" class="btn btn-primary" id="btnSave" data-bs-dismiss="modal">Guardar</button>
                    </div>
                </div>
            </div>
        </div>
    }
</div>
