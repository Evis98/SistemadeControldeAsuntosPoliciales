@model FrontEnd.Models.ViewModels.InfractorViewModel
@{
    ViewBag.Title = "Editar Infractor";
}

<div class="container">
    <div class="row mb-3">
        <h2 class="display-4">@ViewBag.Title</h2>
    </div>

    @using (Html.BeginForm("Editar", "Infractor", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        <div class="container">
            @Html.HiddenFor(d => d.IdInfractor)
            @Html.HiddenFor(d => d.Imagen)
            <div class="form-group col-md-3">
                @Html.LabelFor(d => d.TipoIdentificacion)
                @Html.DropDownListFor(d => d.TipoIdentificacion, Model.TiposDeIdentificacion, new { @class = "myselect form-control" })
                @Html.ValidationMessageFor(d => d.TipoIdentificacion, null, new { @class = "red" })
            </div>
            <div class="form-group col-md-3">
                @Html.LabelFor(d => d.Identificacion)
                @Html.TextBoxFor(d => d.Identificacion, "", new { @class = "form-control", @maxlength = "20", @id = "pcedula", @onkeyup = "this.value = this.value.toUpperCase();", @onkeypress = "return sololetrasnumeros(event)" })
                @Html.ValidationMessageFor(d => d.Identificacion, null, new { @class = "red" })
            </div>
            <div class="form-group col-md-6">

                @Html.LabelFor(d => d.Nombre)
                @Html.TextBoxFor(d => d.Nombre, "", new { @class = "form-control", @maxlength = "150", @id = "TNombre", @onkeyup = "this.value = this.value.toUpperCase();", @onkeypress = "return sololetras(event)" })
                @Html.ValidationMessageFor(d => d.Nombre, null, new { @class = "red" })
            </div>
            <div class="form-group col-md-3">
                @Html.LabelFor(d => d.FechaNacimiento)
                @Html.EditorFor(d => d.FechaNacimiento, "", new { @class = "form-control" })
                @Html.ValidationMessageFor(d => d.FechaNacimiento, null, new { @class = "red" })

            </div>

            <div class="form-group col-md-3">

                @Html.LabelFor(d => d.Telefono)
                @Html.TextBoxFor(d => d.Telefono, "", new { @class = "inputphone form-control", @minlength = "9", @maxlength = "9" })
                @Html.ValidationMessageFor(d => d.Telefono, null, new { @class = "red" })
            </div>
            <div class="form-group col-md-6">

                @Html.LabelFor(d => d.DireccionExacta)
                @Html.TextAreaFor(d => d.DireccionExacta, new { @class = "form-control", @maxlength = "250", @id = "TNombre", @onkeyup = "this.value = this.value.toUpperCase();", @onkeypress = "return sololetrasnumerossimbolos(event)" })
                @Html.ValidationMessageFor(d => d.DireccionExacta, null, new { @class = "red" })
            </div>
            <div class="form-group col-md-2">
                @Html.LabelFor(d => d.Sexo)
                @Html.DropDownListFor(d => d.Sexo, Model.TiposDeSexo, new { @class = "myselect form-control" })
                @Html.ValidationMessageFor(d => d.TipoIdentificacion, null, new { @class = "red" })
            </div>
            <div class="form-group col-md-6">
                @Html.LabelFor(d => d.CorreoElectronico)
                @Html.TextBoxFor(d => d.CorreoElectronico, "", new { @class = "form-control", @maxlength = "100" })
                @Html.ValidationMessageFor(d => d.CorreoElectronico, null, new { @class = "red" })
            </div>
            <div class="form-group col-md-6">

                @Html.LabelFor(d => d.ProfesionUOficio)
                @Html.TextBoxFor(d => d.ProfesionUOficio, "", new { @class = "form-control", @maxlength = "50", @id = "TNombre", @onkeyup = "this.value = this.value.toUpperCase();", @onkeypress = "return sololetras(event)" })
                @Html.ValidationMessageFor(d => d.ProfesionUOficio, null, new { @class = "red" })
            </div>
            <div class="form-group col-md-6">
                @Html.LabelFor(d => d.Estatura)
                @Html.TextBoxFor(d => d.Estatura, "", new { @class = "form-control inputheight", @maxlength = "4", @id = "TNombre", @onkeyup = "this.value = this.value.toUpperCase();", @onkeypress = "return sololetrasnumeros(event)" })
                @Html.ValidationMessageFor(d => d.Estatura, null, new { @class = "red" })
            </div>
            <div class="form-group col-md-6">
                @Html.LabelFor(d => d.Tatuajes)
                <div class="form-check">
                    <input type="checkbox" class="form-check-input" id="checkboxTatuajes" onclick="aparecerTatuajes()">
                    <label class="form-check-label" for="exampleCheck1">Aplica</label>
                </div>
                @Html.TextAreaFor(d => d.Tatuajes, new { @class = "form-control", @style = "display:none", @maxlength = "150", @id = "nombreTatuajes", @onkeyup = "this.value = this.value.toUpperCase();", @onkeypress = "return sololetrasnumerossimbolos(event)" })
                @Html.ValidationMessageFor(d => d.Tatuajes, null, new { @class = "red" })
            </div>
            <div class="form-group col-md-3">
                @Html.LabelFor(d => d.Nacionalidad)
                @Html.TextBoxFor(d => d.Nacionalidad, "", new { @class = "form-control", @maxlength = "50", @id = "TNombre", @onkeyup = "this.value = this.value.toUpperCase();", @onkeypress = "return sololetras(event)" })
                @Html.ValidationMessageFor(d => d.Nacionalidad, null, new { @class = "red" })
            </div>
            <div class="form-group col-md-6">
                @Html.LabelFor(d => d.Observaciones)
                <div class="form-check">
                    <input type="checkbox" class="form-check-input" id="checkboxObservaciones" onclick="aparecerObservaciones()">
                    <label class="form-check-label" for="exampleCheck1">Aplica</label>
                </div>
                @Html.TextAreaFor(d => d.Observaciones, new { @class = "form-control", @style = "display:none", @maxlength = "150", @id = "Obs", @onkeyup = "this.value = this.value.toUpperCase();", @onkeypress = "return sololetrasnumerossimbolos(event)" })
                @Html.ValidationMessageFor(d => d.Observaciones, null, new { @class = "red" })

            </div>

            <div class="form-group col-md-6">
                @Html.LabelFor(d => d.NombrePadre)
                <div class="form-check">
                    <input type="checkbox" class="form-check-input" id="checkboxPadre" onclick="aparecerPadre()">
                    <label class="form-check-label" for="exampleCheck1">Aplica</label>
                </div>
                @Html.TextBoxFor(d => d.NombrePadre, "", new { @class = "form-control", @maxlength = "150", @style = "display:none", @id = "nombrePadre", @onkeyup = "this.value = this.value.toUpperCase();", @onkeypress = "return sololetras(event)" })


            </div>
            <div class="form-group col-md-6">
                @Html.LabelFor(d => d.NombreMadre)
                <div class="form-check">
                    <input type="checkbox" class="form-check-input" id="checkboxMadre" onclick="aparecerMadre()">
                    <label class="form-check-label">Aplica</label>
                </div>
                @Html.TextBoxFor(d => d.NombreMadre, "", new { @class = "form-control", @style = "display:none", @maxlength = "150", @id = "nombreMadre", @onkeyup = "this.value = this.value.toUpperCase();", @onkeypress = "return sololetras(event)" })
                @Html.ValidationMessageFor(d => d.NombreMadre, null, new { @class = "red" })
            </div>
            <div class="form-group col-md-3">
                @Html.LabelFor(d => d.Archivo)
                @Html.TextBoxFor(d => d.Archivo, new { @type = "file", accept = ".png" })
                @Html.ValidationMessageFor(d => d.Archivo, "", new { @class = "red" })
            </div>

            <div class="modal" id="show" tabindex="-1" role="dialog">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title">Modificar Infractor</h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-body">
                            <p>¿Está seguro que modificar los datos del infractor?</p>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-outline-danger" id="Cancel" data-dismiss="modal">Cancelar</button>
                            <button type="submit" class="btn btn-primary" id="Save">Guardar</button>
                        </div>
                    </div>
                </div>
            </div>


            <div class="form-row">
                <div class="form-group col-md-6">
                    <div style="text-align:right;">
                        <input value="Guardar" class="btn btn-primary" type="button" id="hGuardar" data-toggle="modal" data-target="#show" />

                    </div>
                </div>
            </div>
        </div>}


</div>